{
  "version": 3,
  "sources": ["../../Client/src/ClientCommand.ts", "../../Client/src/DOMCommands.ts", "../../Client/src/index.ts"],
  "sourcesContent": ["import { DOMCommand } from \"./DOMCommands\";\r\n\r\ndeclare var __DEV__ : any;\r\n\r\n// This type will be union type later.\r\nexport type ClientCommand = HandleCommands;\r\n\r\nexport type HandleCommands = {\r\n    Commands: DOMCommand[]\r\n}\r\n\r\nfunction isHandleCommandsProd(value: any) : value is HandleCommands {\r\n    return value.Type === 0;\r\n}\r\n\r\nfunction isHandleCommandsDev(value : any) : value is HandleCommands {\r\n    return value.Type === \"HandleCommands\";\r\n}\r\n\r\nexport const isHandleCommands : (value : any) => value is HandleCommands = __DEV__ ? isHandleCommandsDev : isHandleCommandsProd;", "import { getIsDevelopment } from \"./Utils\";\r\n\r\ndeclare var __DEV__ : any;\r\n\r\nexport type Id = number;\r\n\r\nexport type DOMCommand = \r\n    SetNumberAttribute  |\r\n    SetNumberAttribute  |\r\n    SetBooleanAttribute |\r\n    RemoveAttribute     |\r\n    SetVoidCallback     |\r\n    RemoveCallback      |\r\n    CreateTextNode      |\r\n    CreateElement       |\r\n    AppendChild         |\r\n    SetTextNodeValue    |\r\n    InsertBefore        |\r\n    RemoveChild\r\n    ;\r\n\r\nexport type SetStringAttribute = {\r\n    Id: Id,\r\n    Key: string,\r\n    Value: string\r\n}\r\n\r\nexport type SetNumberAttribute = {\r\n    Id: Id,\r\n    Key: string,\r\n    Value: number\r\n}\r\n\r\nexport type SetBooleanAttribute = {\r\n    Id:Id,\r\n    Key: string,\r\n    Value: boolean\r\n}\r\n\r\nexport type RemoveAttribute = {\r\n    Id: Id,\r\n    Key: string\r\n}\r\n\r\nexport type SetVoidCallback = {\r\n    Id: Id,\r\n    Key: string,\r\n}\r\n\r\nexport type RemoveCallback = {\r\n    Id: Id,\r\n    Key: string,\r\n}\r\n\r\nexport type CreateTextNode = {\r\n    Id: Id,\r\n    Text: string\r\n}\r\n\r\nexport type CreateElement = {\r\n    Id: Id,\r\n    Tag: string\r\n}\r\n\r\nexport type AppendChild = {\r\n    ParentId: Id,\r\n    NewId: Id,\r\n}\r\n\r\nexport type SetTextNodeValue = {\r\n    Id: Id,\r\n    Text: string\r\n}\r\n\r\nexport type InsertBefore = {\r\n    ParentId: Id,\r\n    NewId: Id,\r\n    BeforeId: Id\r\n}\r\n\r\nexport type RemoveChild = {\r\n    ParentId: Id,\r\n    ChildId: Id\r\n}\r\n\r\nfunction isDOMCommandCore(value: any, type_dev: string, type_prod: number) {\r\n    if(window[\"EXPRAZOR_DEV\"]) {\r\n        return value.Type == type_dev;\r\n    }\r\n\r\n    return value.Type == type_prod;\r\n}\r\n\r\nfunction isSetStringAttributeProd(value: any) : value is SetStringAttribute {\r\n    return value.Type === 1;\r\n}\r\nfunction isSetStringAttributeDev(value:any) : value is SetStringAttribute {\r\n    return value.Type === \"SetStringAttribute\"\r\n}\r\nexport const isSetStringAttribute : (value:any) => value is SetStringAttribute = (__DEV__ ? isSetStringAttributeDev : isSetStringAttributeProd);\r\n\r\nfunction isSetNumberAttributeProd(value: any) : value is SetNumberAttribute {\r\n    return value.Type === 2;\r\n}\r\nfunction isSetNumberAttributeDev(value:any) : value is SetNumberAttribute {\r\n    return value.Type === \"SetNumberAttribute\"\r\n}\r\nexport const isSetNumberAttribute : (value:any) => value is SetNumberAttribute = (__DEV__ ? isSetNumberAttributeDev : isSetNumberAttributeProd);\r\n\r\n\r\nfunction isSetBooleanAttributeProd(value: any) : value is SetBooleanAttribute {\r\n    return value.Type === 3;\r\n}\r\nfunction isSetBooleanAttributeDev(value:any) : value is SetBooleanAttribute {\r\n    return value.Type === \"SetBooleanAttribute\"\r\n}\r\nexport const isSetBooleanAttribute : (value:any) => value is SetBooleanAttribute = (__DEV__ ? isSetBooleanAttributeDev : isSetBooleanAttributeProd);\r\n\r\n\r\nfunction isRemoveAttributeProd(value: any) : value is RemoveAttribute {\r\n    return value.Type === 4;\r\n}\r\nfunction isRemoveAttributeDev(value:any) : value is RemoveAttribute {\r\n    return value.Type === \"RemoveAttribute\"\r\n}\r\nexport const isRemoveAttribute : (value:any) => value is RemoveAttribute = (__DEV__ ? isRemoveAttributeDev : isRemoveAttributeProd);\r\n\r\n\r\n\r\nfunction isSetVoidCallbackProd(value: any) : value is SetVoidCallback {\r\n    return value.Type === 5;\r\n}\r\nfunction isSetVoidCallbackDev(value:any) : value is SetVoidCallback {\r\n    return value.Type === \"SetVoidCallback\"\r\n}\r\nexport const isSetVoidCallback : (value:any) => value is SetVoidCallback = (__DEV__ ? isSetVoidCallbackDev : isSetVoidCallbackProd);\r\n\r\n\r\n\r\nfunction isRemoveCallbackProd(value: any) : value is RemoveCallback {\r\n    return value.Type === 6;\r\n}\r\nfunction isRemoveCallbackDev(value:any) : value is RemoveCallback {\r\n    return value.Type === \"RemoveCallback\"\r\n}\r\nexport const isRemoveCallback : (value:any) => value is RemoveCallback = (__DEV__ ? isRemoveCallbackDev : isRemoveCallbackProd);\r\n\r\n\r\n\r\nfunction isCreateTextNodeProd(value: any) : value is CreateTextNode {\r\n    return value.Type === 7;\r\n}\r\nfunction isCreateTextNodeDev(value:any) : value is CreateTextNode {\r\n    return value.Type === \"CreateTextNode\"\r\n}\r\nexport const isCreateTextNode : (value:any) => value is CreateTextNode = (__DEV__ ? isCreateTextNodeDev : isCreateTextNodeProd);\r\n\r\n\r\n\r\nfunction isCreateElementProd(value: any) : value is CreateElement {\r\n    return value.Type === 8;\r\n}\r\nfunction isCreateElementDev(value:any) : value is CreateElement {\r\n    return value.Type === \"CreateElement\"\r\n}\r\nexport const isCreateElement : (value:any) => value is CreateElement = (__DEV__ ? isCreateElementDev : isCreateElementProd);\r\n\r\n\r\nfunction isAppendChildProd(value: any) : value is AppendChild {\r\n    return value.Type === 9;\r\n}\r\nfunction isAppendChildDev(value:any) : value is AppendChild {\r\n    return value.Type === \"AppendChild\"\r\n}\r\nexport const isAppendChild : (value:any) => value is AppendChild = (__DEV__ ? isAppendChildDev : isAppendChildProd);\r\n\r\n\r\n\r\nfunction isSetTextNodeValueProd(value: any) : value is SetTextNodeValue {\r\n    return value.Type === 10;\r\n}\r\nfunction isSetTextNodeValueDev(value:any) : value is SetTextNodeValue {\r\n    return value.Type === \"SetTextNodeValue\"\r\n}\r\nexport const isSetTextNodeValue : (value:any) => value is SetTextNodeValue = (__DEV__ ? isSetTextNodeValueDev : isSetTextNodeValueProd);\r\n\r\n\r\nfunction isInsertBeforeProd(value: any) : value is InsertBefore {\r\n    return value.Type === 11;\r\n}\r\nfunction isInsertBeforeDev(value:any) : value is InsertBefore {\r\n    return value.Type === \"InsertBefore\"\r\n}\r\nexport const isInsertBefore : (value:any) => value is InsertBefore = (__DEV__ ? isInsertBeforeDev : isInsertBeforeProd);\r\n\r\n\r\nfunction isRemoveChildProd(value: any) : value is RemoveChild {\r\n    return value.Type === 12;\r\n}\r\nfunction isRemoveChildDev(value:any) : value is RemoveChild {\r\n    return value.Type === \"RemoveChild\"\r\n}\r\nexport const isRemoveChild : (value:any) => value is RemoveChild = (__DEV__ ? isRemoveChildDev : isRemoveChildProd);", "import { isHandleCommands } from \"./ClientCommand\";\r\nimport { DOMCommand, Id, isAppendChild, isCreateElement, isCreateTextNode, isInsertBefore, isRemoveAttribute, isRemoveCallback, isRemoveChild, isSetBooleanAttribute, isSetNumberAttribute, isSetStringAttribute, isSetTextNodeValue, isSetVoidCallback } from \"./DOMCommands\";\r\n\r\ndeclare var __DEV__ : any;\r\n\r\nconst idToElement: Map<Id, Node> = new Map();\r\nconst elementToId : Map<Node, Id> = new Map();\r\n\r\nconst MOUNT_ID = -1;\r\nidToElement.set(0, document.querySelector(\"#root\"));\r\nconsole.log(idToElement);\r\nelementToId[idToElement[MOUNT_ID]] = MOUNT_ID;\r\n\r\n\r\nconst location = window.location;\r\n\r\nconsole.log(location.pathname);\r\n\r\nlet hubUri = `${location.protocol === \"https:\" ? \"wss:\" : \"ws:\"}//${location.host}${location.pathname}`;\r\nconst socket = new WebSocket(hubUri);\r\n\r\nsocket.addEventListener(\"open\", event => {\r\n    socket.send(JSON.stringify([\"Hello\"]));\r\n});\r\n\r\nsocket.addEventListener(\"message\", event => {\r\n    const data = JSON.parse(event.data);\r\n    if(isHandleCommands(data)) {\r\n        data.Commands.forEach(cmd => {\r\n            if (isSetStringAttribute(cmd)) {\r\n                (idToElement.get(cmd.Id) as HTMLElement).setAttribute(cmd.Key, cmd.Value);\r\n            } else if (isSetNumberAttribute(cmd)) {\r\n                (idToElement.get(cmd.Id) as HTMLElement).setAttribute(cmd.Key, cmd.Value.toString());\r\n            } else if (isSetBooleanAttribute(cmd)) {\r\n                if (cmd.Value) {\r\n                    (idToElement.get(cmd.Id) as HTMLElement).setAttribute(cmd.Key, \"\");\r\n                } else {\r\n                    (idToElement.get(cmd.Id) as HTMLElement).removeAttribute(cmd.Key);\r\n                }\r\n            } else if (isRemoveAttribute(cmd)) {\r\n                (idToElement.get(cmd.Id) as HTMLElement).removeAttribute(cmd.Key);\r\n            } else if (isSetVoidCallback(cmd)) {\r\n                switch (cmd.Key) {\r\n                    // Only support void callback for now.\r\n                    default:\r\n                        var type = __DEV__ ? \"InvokeVoid\" : 1;\r\n                        idToElement.get(cmd.Id)[cmd.Key] = () => socket.send(JSON.stringify([type, cmd.Id, cmd.Key]));\r\n                        break;\r\n                }\r\n            } else if (isRemoveCallback(cmd)) {\r\n                idToElement.get(cmd.Id)[cmd.Key] = null;\r\n            } else if (isCreateTextNode(cmd)) {\r\n                const newNode = document.createTextNode(cmd.Text);\r\n                idToElement.set(cmd.Id, newNode);\r\n                elementToId.set(newNode, cmd.Id);\r\n            } else if (isCreateElement(cmd)) {\r\n                const newNode = document.createElement(cmd.Tag);\r\n                idToElement.set(cmd.Id, newNode);\r\n                elementToId.set(newNode, cmd.Id);\r\n            } else if (isAppendChild(cmd)) {\r\n                idToElement.get(cmd.ParentId).appendChild(idToElement.get(cmd.NewId));\r\n            } else if(isSetTextNodeValue(cmd)) {\r\n                (idToElement.get(cmd.Id) as Text).data = cmd.Text;\r\n            } else if(isInsertBefore(cmd)) {\r\n                idToElement.get(cmd.ParentId).insertBefore(idToElement.get(cmd.NewId), idToElement.get(cmd.BeforeId));\r\n            } else if(isRemoveChild(cmd)) {\r\n                const childToRemove = idToElement.get(cmd.ChildId);\r\n                if(childToRemove instanceof HTMLElement) {\r\n                    // remove all child from map to prevent memory leak.\r\n                    for(const child of childToRemove.querySelectorAll(\"*\")) {\r\n                        var id = elementToId.get(child);\r\n                        idToElement.delete(id);\r\n                        elementToId.delete(child);\r\n                    }\r\n                }\r\n                idToElement[cmd.ParentId].removeChild(childToRemove);\r\n            }\r\n        });\r\n    }\r\n});"],
  "mappings": "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",
  "names": []
}
