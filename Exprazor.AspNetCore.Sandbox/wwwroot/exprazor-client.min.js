(()=>{var D=(r=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(r,{get:(e,t)=>(typeof require!="undefined"?require:e)[t]}):r)(function(r){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+r+'" is not supported')});var S=class extends Error{constructor(e,t){let o=new.target.prototype;super(`${e}: Status code '${t}'`);this.statusCode=t,this.__proto__=o}},x=class extends Error{constructor(e="A timeout occurred."){let t=new.target.prototype;super(e);this.__proto__=t}},E=class extends Error{constructor(e="An abort occurred."){let t=new.target.prototype;super(e);this.__proto__=t}},O=class extends Error{constructor(e,t){let o=new.target.prototype;super(e);this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=o}},F=class extends Error{constructor(e,t){let o=new.target.prototype;super(e);this.transport=t,this.errorType="DisabledTransportError",this.__proto__=o}},V=class extends Error{constructor(e,t){let o=new.target.prototype;super(e);this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=o}},K=class extends Error{constructor(e){let t=new.target.prototype;super(e);this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}},z=class extends Error{constructor(e,t){let o=new.target.prototype;super(e);this.innerErrors=t,this.__proto__=o}};var A=class{constructor(e,t,o){this.statusCode=e,this.statusText=t,this.content=o}},P=class{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}};var s;(function(r){r[r.Trace=0]="Trace",r[r.Debug=1]="Debug",r[r.Information=2]="Information",r[r.Warning=3]="Warning",r[r.Error=4]="Error",r[r.Critical=5]="Critical",r[r.None=6]="None"})(s||(s={}));var k=class{constructor(){}log(e,t){}};k.instance=new k;var Ce="6.0.0",g=class{static isRequired(e,t){if(e==null)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,o){if(!(e in t))throw new Error(`Unknown ${o} value: ${e}.`)}},p=class{static get isBrowser(){return typeof window=="object"}static get isWebWorker(){return typeof self=="object"&&"importScripts"in self}static get isNode(){return!this.isBrowser&&!this.isWebWorker}};function T(r,e){let t="";return N(r)?(t=`Binary data of length ${r.byteLength}`,e&&(t+=`. Content: '${ye(r)}'`)):typeof r=="string"&&(t=`String data of length ${r.length}`,e&&(t+=`. Content: '${r}'`)),t}function ye(r){let e=new Uint8Array(r),t="";return e.forEach(o=>{t+=`0x${o<16?"0":""}${o.toString(16)} `}),t.substr(0,t.length-1)}function N(r){return r&&typeof ArrayBuffer!="undefined"&&(r instanceof ArrayBuffer||r.constructor&&r.constructor.name==="ArrayBuffer")}async function U(r,e,t,o,n,i,a){let l={};if(n){let $=await n();$&&(l={Authorization:`Bearer ${$}`})}let[c,h]=v();l[c]=h,r.log(s.Trace,`(${e} transport) sending data. ${T(i,a.logMessageContent)}.`);let _=N(i)?"arraybuffer":"text",I=await t.post(o,{content:i,headers:{...l,...a.headers},responseType:_,timeout:a.timeout,withCredentials:a.withCredentials});r.log(s.Trace,`(${e} transport) request complete. Response status: ${I.statusCode}.`)}function se(r){return r===void 0?new R(s.Information):r===null?k.instance:r.log!==void 0?r:new R(r)}var X=class{constructor(e,t){this._subject=e,this._observer=t}dispose(){let e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),this._subject.observers.length===0&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}},R=class{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){let o=`[${new Date().toISOString()}] ${s[e]}: ${t}`;switch(e){case s.Critical:case s.Error:this.out.error(o);break;case s.Warning:this.out.warn(o);break;case s.Information:this.out.info(o);break;default:this.out.log(o);break}}}};function v(){let r="X-SignalR-User-Agent";return p.isNode&&(r="User-Agent"),[r,ve(Ce,Ie(),ke(),Ee())]}function ve(r,e,t,o){let n="Microsoft SignalR/",i=r.split(".");return n+=`${i[0]}.${i[1]}`,n+=` (${r}; `,e&&e!==""?n+=`${e}; `:n+="Unknown OS; ",n+=`${t}`,o?n+=`; ${o}`:n+="; Unknown Runtime Version",n+=")",n}function Ie(){if(p.isNode)switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}else return""}function Ee(){if(p.isNode)return process.versions.node}function ke(){return p.isNode?"NodeJS":"Browser"}function J(r){return r.stack?r.stack:r.message?r.message:`${r}`}function ie(){if(typeof globalThis!="undefined")return globalThis;if(typeof self!="undefined")return self;if(typeof window!="undefined")return window;if(typeof global!="undefined")return global;throw new Error("could not find global")}var q=class extends P{constructor(e){super();if(this._logger=e,typeof fetch=="undefined"){let t=typeof __webpack_require__=="function"?__non_webpack_require__:D;this._jar=new(t("tough-cookie")).CookieJar,this._fetchType=t("node-fetch"),this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(ie());if(typeof AbortController=="undefined"){let t=typeof __webpack_require__=="function"?__non_webpack_require__:D;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new E;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");let t=new this._abortControllerType,o;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),o=new E});let n=null;if(e.timeout){let c=e.timeout;n=setTimeout(()=>{t.abort(),this._logger.log(s.Warning,"Timeout from HTTP request."),o=new x},c)}let i;try{i=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:e.withCredentials===!0?"include":"same-origin",headers:{"Content-Type":"text/plain;charset=UTF-8","X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(c){throw o||(this._logger.log(s.Warning,`Error from HTTP request. ${c}.`),c)}finally{n&&clearTimeout(n),e.abortSignal&&(e.abortSignal.onabort=null)}if(!i.ok){let c=await ae(i,"text");throw new S(c||i.statusText,i.status)}let l=await ae(i,e.responseType);return new A(i.status,i.statusText,l)}getCookieString(e){let t="";return p.isNode&&this._jar&&this._jar.getCookies(e,(o,n)=>t=n.join("; ")),t}};function ae(r,e){let t;switch(e){case"arraybuffer":t=r.arrayBuffer();break;case"text":t=r.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:t=r.text();break}return t}var G=class extends P{constructor(e){super();this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new E):e.method?e.url?new Promise((t,o)=>{let n=new XMLHttpRequest;n.open(e.method,e.url,!0),n.withCredentials=e.withCredentials===void 0?!0:e.withCredentials,n.setRequestHeader("X-Requested-With","XMLHttpRequest"),n.setRequestHeader("Content-Type","text/plain;charset=UTF-8");let i=e.headers;i&&Object.keys(i).forEach(a=>{n.setRequestHeader(a,i[a])}),e.responseType&&(n.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{n.abort(),o(new E)}),e.timeout&&(n.timeout=e.timeout),n.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),n.status>=200&&n.status<300?t(new A(n.status,n.statusText,n.response||n.responseText)):o(new S(n.response||n.responseText||n.statusText,n.status))},n.onerror=()=>{this._logger.log(s.Warning,`Error from HTTP request. ${n.status}: ${n.statusText}.`),o(new S(n.statusText,n.status))},n.ontimeout=()=>{this._logger.log(s.Warning,"Timeout from HTTP request."),o(new x)},n.send(e.content||"")}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}};var Y=class extends P{constructor(e){super();if(typeof fetch!="undefined"||p.isNode)this._httpClient=new q(e);else if(typeof XMLHttpRequest!="undefined")this._httpClient=new G(e);else throw new Error("No usable HttpClient found.")}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new E):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}};var b=class{static write(e){return`${e}${b.RecordSeparator}`}static parse(e){if(e[e.length-1]!==b.RecordSeparator)throw new Error("Message is incomplete.");let t=e.split(b.RecordSeparator);return t.pop(),t}};b.RecordSeparatorCode=30;b.RecordSeparator=String.fromCharCode(b.RecordSeparatorCode);var Q=class{writeHandshakeRequest(e){return b.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,o;if(N(e)){let l=new Uint8Array(e),c=l.indexOf(b.RecordSeparatorCode);if(c===-1)throw new Error("Message is incomplete.");let h=c+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(l.slice(0,h))),o=l.byteLength>h?l.slice(h).buffer:null}else{let l=e,c=l.indexOf(b.RecordSeparator);if(c===-1)throw new Error("Message is incomplete.");let h=c+1;t=l.substring(0,h),o=l.length>h?l.substring(h):null}let n=b.parse(t),i=JSON.parse(n[0]);if(i.type)throw new Error("Expected a handshake response from the server.");return[o,i]}};var u;(function(r){r[r.Invocation=1]="Invocation",r[r.StreamItem=2]="StreamItem",r[r.Completion=3]="Completion",r[r.StreamInvocation=4]="StreamInvocation",r[r.CancelInvocation=5]="CancelInvocation",r[r.Ping=6]="Ping",r[r.Close=7]="Close"})(u||(u={}));var Z=class{constructor(){this.observers=[]}next(e){for(let t of this.observers)t.next(e)}error(e){for(let t of this.observers)t.error&&t.error(e)}complete(){for(let e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new X(this,e)}};var Te=30*1e3,xe=15*1e3,d;(function(r){r.Disconnected="Disconnected",r.Connecting="Connecting",r.Connected="Connected",r.Disconnecting="Disconnecting",r.Reconnecting="Reconnecting"})(d||(d={}));var H=class{constructor(e,t,o,n){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(s.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://docs.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},g.isRequired(e,"connection"),g.isRequired(t,"logger"),g.isRequired(o,"protocol"),this.serverTimeoutInMilliseconds=Te,this.keepAliveIntervalInMilliseconds=xe,this._logger=t,this._protocol=o,this.connection=e,this._reconnectPolicy=n,this._handshakeProtocol=new Q,this.connection.onreceive=i=>this._processIncomingData(i),this.connection.onclose=i=>this._connectionClosed(i),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=d.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:u.Ping})}static create(e,t,o,n){return new H(e,t,o,n)}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==d.Disconnected&&this._connectionState!==d.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==d.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=d.Connecting,this._logger.log(s.Debug,"Starting HubConnection.");try{await this._startInternal(),p.isBrowser&&document&&document.addEventListener("freeze",this._freezeEventListener),this._connectionState=d.Connected,this._connectionStarted=!0,this._logger.log(s.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=d.Disconnected,this._logger.log(s.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;let e=new Promise((t,o)=>{this._handshakeResolver=t,this._handshakeRejecter=o});await this.connection.start(this._protocol.transferFormat);try{let t={protocol:this._protocol.name,version:this._protocol.version};if(this._logger.log(s.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(t)),this._logger.log(s.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError}catch(t){throw this._logger.log(s.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(t),t}}async stop(){let e=this._startPromise;this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch{}}_stopInternal(e){return this._connectionState===d.Disconnected?(this._logger.log(s.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve()):this._connectionState===d.Disconnecting?(this._logger.log(s.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise):(this._connectionState=d.Disconnecting,this._logger.log(s.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(s.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new Error("The connection was stopped before the hub handshake could complete."),this.connection.stop(e)))}stream(e,...t){let[o,n]=this._replaceStreamingParams(t),i=this._createStreamInvocation(e,t,n),a,l=new Z;return l.cancelCallback=()=>{let c=this._createCancelInvocation(i.invocationId);return delete this._callbacks[i.invocationId],a.then(()=>this._sendWithProtocol(c))},this._callbacks[i.invocationId]=(c,h)=>{if(h){l.error(h);return}else c&&(c.type===u.Completion?c.error?l.error(new Error(c.error)):l.complete():l.next(c.item))},a=this._sendWithProtocol(i).catch(c=>{l.error(c),delete this._callbacks[i.invocationId]}),this._launchStreams(o,a),l}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){let[o,n]=this._replaceStreamingParams(t),i=this._sendWithProtocol(this._createInvocation(e,t,!0,n));return this._launchStreams(o,i),i}invoke(e,...t){let[o,n]=this._replaceStreamingParams(t),i=this._createInvocation(e,t,!1,n);return new Promise((l,c)=>{this._callbacks[i.invocationId]=(_,I)=>{if(I){c(I);return}else _&&(_.type===u.Completion?_.error?c(new Error(_.error)):l(_.result):c(new Error(`Unexpected message type: ${_.type}`)))};let h=this._sendWithProtocol(i).catch(_=>{c(_),delete this._callbacks[i.invocationId]});this._launchStreams(o,h)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),this._methods[e].indexOf(t)===-1&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();let o=this._methods[e];if(!!o)if(t){let n=o.indexOf(t);n!==-1&&(o.splice(n,1),o.length===0&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){let t=this._protocol.parseMessages(e,this._logger);for(let o of t)switch(o.type){case u.Invocation:this._invokeClientMethod(o);break;case u.StreamItem:case u.Completion:{let n=this._callbacks[o.invocationId];if(n){o.type===u.Completion&&delete this._callbacks[o.invocationId];try{n(o)}catch(i){this._logger.log(s.Error,`Stream callback threw error: ${J(i)}`)}}break}case u.Ping:break;case u.Close:{this._logger.log(s.Information,"Close message received from server.");let n=o.error?new Error("Server returned an error on close: "+o.error):void 0;o.allowReconnect===!0?this.connection.stop(n):this._stopPromise=this._stopInternal(n);break}default:this._logger.log(s.Warning,`Invalid message type: ${o.type}.`);break}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,o;try{[o,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(n){let i="Error parsing handshake response: "+n;this._logger.log(s.Error,i);let a=new Error(i);throw this._handshakeRejecter(a),a}if(t.error){let n="Server returned handshake error: "+t.error;this._logger.log(s.Error,n);let i=new Error(n);throw this._handshakeRejecter(i),i}else this._logger.log(s.Debug,"Server handshake complete.");return this._handshakeResolver(),o}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),this._pingServerHandle===void 0)){let e=this._nextKeepAlive-new Date().getTime();e<0&&(e=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===d.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}_invokeClientMethod(e){let t=this._methods[e.target.toLowerCase()];if(t){try{t.forEach(o=>o.apply(this,e.arguments))}catch(o){this._logger.log(s.Error,`A callback for the method ${e.target.toLowerCase()} threw error '${o}'.`)}if(e.invocationId){let o="Server requested a response, which is not supported in this version of the client.";this._logger.log(s.Error,o),this._stopPromise=this._stopInternal(new Error(o))}}else this._logger.log(s.Warning,`No client method with the name '${e.target}' found.`)}_connectionClosed(e){this._logger.log(s.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new Error("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===d.Disconnecting?this._completeClose(e):this._connectionState===d.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===d.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=d.Disconnected,this._connectionStarted=!1,p.isBrowser&&document&&document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(s.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){let t=Date.now(),o=0,n=e!==void 0?e:new Error("Attempting to reconnect due to a unknown error."),i=this._getNextRetryDelay(o++,0,n);if(i===null){this._logger.log(s.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(e);return}if(this._connectionState=d.Reconnecting,e?this._logger.log(s.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(s.Information,"Connection reconnecting."),this._reconnectingCallbacks.length!==0){try{this._reconnectingCallbacks.forEach(a=>a.apply(this,[e]))}catch(a){this._logger.log(s.Error,`An onreconnecting callback called with error '${e}' threw error '${a}'.`)}if(this._connectionState!==d.Reconnecting){this._logger.log(s.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;i!==null;){if(this._logger.log(s.Information,`Reconnect attempt number ${o} will start in ${i} ms.`),await new Promise(a=>{this._reconnectDelayHandle=setTimeout(a,i)}),this._reconnectDelayHandle=void 0,this._connectionState!==d.Reconnecting){this._logger.log(s.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(await this._startInternal(),this._connectionState=d.Connected,this._logger.log(s.Information,"HubConnection reconnected successfully."),this._reconnectedCallbacks.length!==0)try{this._reconnectedCallbacks.forEach(a=>a.apply(this,[this.connection.connectionId]))}catch(a){this._logger.log(s.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${a}'.`)}return}catch(a){if(this._logger.log(s.Information,`Reconnect attempt failed because of error '${a}'.`),this._connectionState!==d.Reconnecting){this._logger.log(s.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===d.Disconnecting&&this._completeClose();return}n=a instanceof Error?a:new Error(a.toString()),i=this._getNextRetryDelay(o++,Date.now()-t,n)}}this._logger.log(s.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${o} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,o){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:o})}catch(n){return this._logger.log(s.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${n}'.`),null}}_cancelCallbacksWithError(e){let t=this._callbacks;this._callbacks={},Object.keys(t).forEach(o=>{let n=t[o];try{n(null,e)}catch(i){this._logger.log(s.Error,`Stream 'error' callback called with '${e}' threw error: ${J(i)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,o,n){if(o)return n.length!==0?{arguments:t,streamIds:n,target:e,type:u.Invocation}:{arguments:t,target:e,type:u.Invocation};{let i=this._invocationId;return this._invocationId++,n.length!==0?{arguments:t,invocationId:i.toString(),streamIds:n,target:e,type:u.Invocation}:{arguments:t,invocationId:i.toString(),target:e,type:u.Invocation}}}_launchStreams(e,t){if(e.length!==0){t||(t=Promise.resolve());for(let o in e)e[o].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(o)))},error:n=>{let i;n instanceof Error?i=n.message:n&&n.toString?i=n.toString():i="Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(o,i)))},next:n=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(o,n)))}})}}_replaceStreamingParams(e){let t=[],o=[];for(let n=0;n<e.length;n++){let i=e[n];if(this._isObservable(i)){let a=this._invocationId;this._invocationId++,t[a]=i,o.push(a.toString()),e.splice(n,1)}}return[t,o]}_isObservable(e){return e&&e.subscribe&&typeof e.subscribe=="function"}_createStreamInvocation(e,t,o){let n=this._invocationId;return this._invocationId++,o.length!==0?{arguments:t,invocationId:n.toString(),streamIds:o,target:e,type:u.StreamInvocation}:{arguments:t,invocationId:n.toString(),target:e,type:u.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:u.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:u.StreamItem}}_createCompletionMessage(e,t,o){return t?{error:t,invocationId:e,type:u.Completion}:{invocationId:e,result:o,type:u.Completion}}};var Pe=[0,2e3,1e4,3e4,null],M=class{constructor(e){this._retryDelays=e!==void 0?[...e,null]:Pe}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}};var C=class{};C.Authorization="Authorization";C.Cookie="Cookie";var m;(function(r){r[r.None=0]="None",r[r.WebSockets=1]="WebSockets",r[r.ServerSentEvents=2]="ServerSentEvents",r[r.LongPolling=4]="LongPolling"})(m||(m={}));var f;(function(r){r[r.Text=1]="Text",r[r.Binary=2]="Binary"})(f||(f={}));var ee=class{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}};var W=class{constructor(e,t,o,n){this._httpClient=e,this._accessTokenFactory=t,this._logger=o,this._pollAbort=new ee,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}get pollAborted(){return this._pollAbort.aborted}async connect(e,t){if(g.isRequired(e,"url"),g.isRequired(t,"transferFormat"),g.isIn(t,f,"transferFormat"),this._url=e,this._logger.log(s.Trace,"(LongPolling transport) Connecting."),t===f.Binary&&typeof XMLHttpRequest!="undefined"&&typeof new XMLHttpRequest().responseType!="string")throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");let[o,n]=v(),i={[o]:n,...this._options.headers},a={abortSignal:this._pollAbort.signal,headers:i,timeout:1e5,withCredentials:this._options.withCredentials};t===f.Binary&&(a.responseType="arraybuffer");let l=await this._getAccessToken();this._updateHeaderToken(a,l);let c=`${e}&_=${Date.now()}`;this._logger.log(s.Trace,`(LongPolling transport) polling: ${c}.`);let h=await this._httpClient.get(c,a);h.statusCode!==200?(this._logger.log(s.Error,`(LongPolling transport) Unexpected response code: ${h.statusCode}.`),this._closeError=new S(h.statusText||"",h.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,a)}async _getAccessToken(){return this._accessTokenFactory?await this._accessTokenFactory():null}_updateHeaderToken(e,t){if(e.headers||(e.headers={}),t){e.headers[C.Authorization]=`Bearer ${t}`;return}e.headers[C.Authorization]&&delete e.headers[C.Authorization]}async _poll(e,t){try{for(;this._running;){let o=await this._getAccessToken();this._updateHeaderToken(t,o);try{let n=`${e}&_=${Date.now()}`;this._logger.log(s.Trace,`(LongPolling transport) polling: ${n}.`);let i=await this._httpClient.get(n,t);i.statusCode===204?(this._logger.log(s.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):i.statusCode!==200?(this._logger.log(s.Error,`(LongPolling transport) Unexpected response code: ${i.statusCode}.`),this._closeError=new S(i.statusText||"",i.statusCode),this._running=!1):i.content?(this._logger.log(s.Trace,`(LongPolling transport) data received. ${T(i.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(i.content)):this._logger.log(s.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(n){this._running?n instanceof x?this._logger.log(s.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=n,this._running=!1):this._logger.log(s.Trace,`(LongPolling transport) Poll errored after shutdown: ${n.message}`)}}}finally{this._logger.log(s.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?U(this._logger,"LongPolling",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(s.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(s.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);let e={},[t,o]=v();e[t]=o;let n={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials},i=await this._getAccessToken();this._updateHeaderToken(n,i),await this._httpClient.delete(this._url,n),this._logger.log(s.Trace,"(LongPolling transport) DELETE request sent.")}finally{this._logger.log(s.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(s.Trace,e),this.onclose(this._closeError)}}};var te=class{constructor(e,t,o,n){this._httpClient=e,this._accessTokenFactory=t,this._logger=o,this._options=n,this.onreceive=null,this.onclose=null}async connect(e,t){if(g.isRequired(e,"url"),g.isRequired(t,"transferFormat"),g.isIn(t,f,"transferFormat"),this._logger.log(s.Trace,"(SSE transport) Connecting."),this._url=e,this._accessTokenFactory){let o=await this._accessTokenFactory();o&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(o)}`)}return new Promise((o,n)=>{let i=!1;if(t!==f.Text){n(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}let a;if(p.isBrowser||p.isWebWorker)a=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{let l=this._httpClient.getCookieString(e),c={};c.Cookie=l;let[h,_]=v();c[h]=_,a=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...c,...this._options.headers}})}try{a.onmessage=l=>{if(this.onreceive)try{this._logger.log(s.Trace,`(SSE transport) data received. ${T(l.data,this._options.logMessageContent)}.`),this.onreceive(l.data)}catch(c){this._close(c);return}},a.onerror=l=>{i?this._close():n(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},a.onopen=()=>{this._logger.log(s.Information,`SSE connected to ${this._url}`),this._eventSource=a,i=!0,o()}}catch(l){n(l);return}})}async send(e){return this._eventSource?U(this._logger,"SSE",this._httpClient,this._url,this._accessTokenFactory,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}};var oe=class{constructor(e,t,o,n,i,a){this._logger=o,this._accessTokenFactory=t,this._logMessageContent=n,this._webSocketConstructor=i,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=a}async connect(e,t){if(g.isRequired(e,"url"),g.isRequired(t,"transferFormat"),g.isIn(t,f,"transferFormat"),this._logger.log(s.Trace,"(WebSockets transport) Connecting."),this._accessTokenFactory){let o=await this._accessTokenFactory();o&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(o)}`)}return new Promise((o,n)=>{e=e.replace(/^http/,"ws");let i,a=this._httpClient.getCookieString(e),l=!1;if(p.isNode){let c={},[h,_]=v();c[h]=_,a&&(c[C.Cookie]=`${a}`),i=new this._webSocketConstructor(e,void 0,{headers:{...c,...this._headers}})}i||(i=new this._webSocketConstructor(e)),t===f.Binary&&(i.binaryType="arraybuffer"),i.onopen=c=>{this._logger.log(s.Information,`WebSocket connected to ${e}.`),this._webSocket=i,l=!0,o()},i.onerror=c=>{let h=null;typeof ErrorEvent!="undefined"&&c instanceof ErrorEvent?h=c.error:h="There was an error with the transport",this._logger.log(s.Information,`(WebSockets transport) ${h}.`)},i.onmessage=c=>{if(this._logger.log(s.Trace,`(WebSockets transport) data received. ${T(c.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(c.data)}catch(h){this._close(h);return}},i.onclose=c=>{if(l)this._close(c);else{let h=null;typeof ErrorEvent!="undefined"&&c instanceof ErrorEvent?h=c.error:h="WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",n(new Error(h))}}})}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(s.Trace,`(WebSockets transport) sending data. ${T(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(s.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(e)&&(e.wasClean===!1||e.code!==1e3)?this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)):e instanceof Error?this.onclose(e):this.onclose())}_isCloseEvent(e){return e&&typeof e.wasClean=="boolean"&&typeof e.code=="number"}};var ce=100,ne=class{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,g.isRequired(e,"url"),this._logger=se(t.logger),this.baseUrl=this._resolveUrl(e),t=t||{},t.logMessageContent=t.logMessageContent===void 0?!1:t.logMessageContent,typeof t.withCredentials=="boolean"||t.withCredentials===void 0)t.withCredentials=t.withCredentials===void 0?!0:t.withCredentials;else throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.timeout=t.timeout===void 0?100*1e3:t.timeout;let o=null,n=null;if(p.isNode&&typeof D!="undefined"){let i=typeof __webpack_require__=="function"?__non_webpack_require__:D;o=i("ws"),n=i("eventsource")}!p.isNode&&typeof WebSocket!="undefined"&&!t.WebSocket?t.WebSocket=WebSocket:p.isNode&&!t.WebSocket&&o&&(t.WebSocket=o),!p.isNode&&typeof EventSource!="undefined"&&!t.EventSource?t.EventSource=EventSource:p.isNode&&!t.EventSource&&typeof n!="undefined"&&(t.EventSource=n),this._httpClient=t.httpClient||new Y(this._logger),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||f.Binary,g.isIn(e,f,"transferFormat"),this._logger.log(s.Debug,`Starting connection with transfer format '${f[e]}'.`),this._connectionState!=="Disconnected")return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,this._connectionState==="Disconnecting"){let t="Failed to start the HttpConnection before stop() was called.";return this._logger.log(s.Error,t),await this._stopPromise,Promise.reject(new Error(t))}else if(this._connectionState!=="Connected"){let t="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(s.Error,t),Promise.reject(new Error(t))}this._connectionStarted=!0}send(e){return this._connectionState!=="Connected"?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new j(this.transport)),this._sendQueue.send(e))}async stop(e){if(this._connectionState==="Disconnected")return this._logger.log(s.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve();if(this._connectionState==="Disconnecting")return this._logger.log(s.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;this._connectionState="Disconnecting",this._stopPromise=new Promise(t=>{this._stopPromiseResolver=t}),await this._stopInternal(e),await this._stopPromise}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch{}if(this.transport){try{await this.transport.stop()}catch(t){this._logger.log(s.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(s.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory;try{if(this._options.skipNegotiation)if(this._options.transport===m.WebSockets)this.transport=this._constructTransport(m.WebSockets),await this._startTransport(t,e);else throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");else{let o=null,n=0;do{if(o=await this._getNegotiationResponse(t),this._connectionState==="Disconnecting"||this._connectionState==="Disconnected")throw new Error("The connection was stopped during negotiation.");if(o.error)throw new Error(o.error);if(o.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(o.url&&(t=o.url),o.accessToken){let i=o.accessToken;this._accessTokenFactory=()=>i}n++}while(o.url&&n<ce);if(n===ce&&o.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,o,e)}this.transport instanceof W&&(this.features.inherentKeepAlive=!0),this._connectionState==="Connecting"&&(this._logger.log(s.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(o){return this._logger.log(s.Error,"Failed to start the connection: "+o),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(o)}}async _getNegotiationResponse(e){let t={};if(this._accessTokenFactory){let a=await this._accessTokenFactory();a&&(t[C.Authorization]=`Bearer ${a}`)}let[o,n]=v();t[o]=n;let i=this._resolveNegotiateUrl(e);this._logger.log(s.Debug,`Sending negotiation request: ${i}.`);try{let a=await this._httpClient.post(i,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(a.statusCode!==200)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${a.statusCode}'`));let l=JSON.parse(a.content);return(!l.negotiateVersion||l.negotiateVersion<1)&&(l.connectionToken=l.connectionId),l}catch(a){let l="Failed to complete negotiation with the server: "+a;return a instanceof S&&a.statusCode===404&&(l=l+" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(s.Error,l),Promise.reject(new K(l))}}_createConnectUrl(e,t){return t?e+(e.indexOf("?")===-1?"?":"&")+`id=${t}`:e}async _createTransport(e,t,o,n){let i=this._createConnectUrl(e,o.connectionToken);if(this._isITransport(t)){this._logger.log(s.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(i,n),this.connectionId=o.connectionId;return}let a=[],l=o.availableTransports||[],c=o;for(let h of l){let _=this._resolveTransportOrError(h,t,n);if(_ instanceof Error)a.push(`${h.transport} failed:`),a.push(_);else if(this._isITransport(_)){if(this.transport=_,!c){try{c=await this._getNegotiationResponse(e)}catch(I){return Promise.reject(I)}i=this._createConnectUrl(e,c.connectionToken)}try{await this._startTransport(i,n),this.connectionId=c.connectionId;return}catch(I){if(this._logger.log(s.Error,`Failed to start the transport '${h.transport}': ${I}`),c=void 0,a.push(new V(`${h.transport} failed: ${I}`,m[h.transport])),this._connectionState!=="Connecting"){let $="Failed to select transport before stop() was called.";return this._logger.log(s.Debug,$),Promise.reject(new Error($))}}}}return a.length>0?Promise.reject(new z(`Unable to connect to the server with any of the available transports. ${a.join(" ")}`,a)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case m.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new oe(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case m.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new te(this._httpClient,this._accessTokenFactory,this._logger,this._options);case m.LongPolling:return new W(this._httpClient,this._accessTokenFactory,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.transport.onclose=o=>this._stopConnection(o),this.transport.connect(e,t)}_resolveTransportOrError(e,t,o){let n=m[e.transport];if(n==null)return this._logger.log(s.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(De(t,n))if(e.transferFormats.map(a=>f[a]).indexOf(o)>=0){if(n===m.WebSockets&&!this._options.WebSocket||n===m.ServerSentEvents&&!this._options.EventSource)return this._logger.log(s.Debug,`Skipping transport '${m[n]}' because it is not supported in your environment.'`),new O(`'${m[n]}' is not supported in your environment.`,n);this._logger.log(s.Debug,`Selecting transport '${m[n]}'.`);try{return this._constructTransport(n)}catch(a){return a}}else return this._logger.log(s.Debug,`Skipping transport '${m[n]}' because it does not support the requested transfer format '${f[o]}'.`),new Error(`'${m[n]}' does not support ${f[o]}.`);else return this._logger.log(s.Debug,`Skipping transport '${m[n]}' because it was disabled by the client.`),new F(`'${m[n]}' is disabled by the client.`,n)}_isITransport(e){return e&&typeof e=="object"&&"connect"in e}_stopConnection(e){if(this._logger.log(s.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,this._connectionState==="Disconnected"){this._logger.log(s.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`);return}if(this._connectionState==="Connecting")throw this._logger.log(s.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if(this._connectionState==="Disconnecting"&&this._stopPromiseResolver(),e?this._logger.log(s.Error,`Connection disconnected with error '${e}'.`):this._logger.log(s.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(s.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(s.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}_resolveUrl(e){if(e.lastIndexOf("https://",0)===0||e.lastIndexOf("http://",0)===0)return e;if(!p.isBrowser||!window.document)throw new Error(`Cannot resolve '${e}'.`);let t=window.document.createElement("a");return t.href=e,this._logger.log(s.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){let t=e.indexOf("?"),o=e.substring(0,t===-1?e.length:t);return o[o.length-1]!=="/"&&(o+="/"),o+="negotiate",o+=t===-1?"":e.substring(t),o.indexOf("negotiateVersion")===-1&&(o+=t===-1?"?":"&",o+="negotiateVersion="+this._negotiateVersion),o}};function De(r,e){return!r||(e&r)!=0}var j=class{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new L,this._transportResult=new L,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new L),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new L;let e=this._transportResult;this._transportResult=void 0;let t=typeof this._buffer[0]=="string"?this._buffer.join(""):j._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(o){e.reject(o)}}}static _concatBuffers(e){let t=e.map(i=>i.byteLength).reduce((i,a)=>i+a),o=new Uint8Array(t),n=0;for(let i of e)o.set(new Uint8Array(i),n),n+=i.byteLength;return o.buffer}},L=class{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}};var Re="json",re=class{constructor(){this.name=Re,this.version=1,this.transferFormat=f.Text}parseMessages(e,t){if(typeof e!="string")throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];t===null&&(t=k.instance);let o=b.parse(e),n=[];for(let i of o){let a=JSON.parse(i);if(typeof a.type!="number")throw new Error("Invalid payload.");switch(a.type){case u.Invocation:this._isInvocationMessage(a);break;case u.StreamItem:this._isStreamItemMessage(a);break;case u.Completion:this._isCompletionMessage(a);break;case u.Ping:break;case u.Close:break;default:t.log(s.Information,"Unknown message type '"+a.type+"' ignored.");continue}n.push(a)}return n}writeMessage(e){return b.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),e.invocationId!==void 0&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),e.item===void 0)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_assertNotEmptyString(e,t){if(typeof e!="string"||e==="")throw new Error(t)}};var $e={trace:s.Trace,debug:s.Debug,info:s.Information,information:s.Information,warn:s.Warning,warning:s.Warning,error:s.Error,critical:s.Critical,none:s.None};function Ae(r){let e=$e[r.toLowerCase()];if(typeof e!="undefined")return e;throw new Error(`Unknown log level: ${r}`)}var B=class{configureLogging(e){if(g.isRequired(e,"logging"),He(e))this.logger=e;else if(typeof e=="string"){let t=Ae(e);this.logger=new R(t)}else this.logger=new R(e);return this}withUrl(e,t){return g.isRequired(e,"url"),g.isNotEmpty(e,"url"),this.url=e,typeof t=="object"?this.httpConnectionOptions={...this.httpConnectionOptions,...t}:this.httpConnectionOptions={...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return g.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new M(e):this.reconnectPolicy=e:this.reconnectPolicy=new M,this}build(){let e=this.httpConnectionOptions||{};if(e.logger===void 0&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");let t=new ne(this.url,e);return H.create(t,this.logger||k.instance,this.protocol||new re,this.reconnectPolicy)}};function He(r){return r.log!==void 0}function y(r,e,t){return window.EXPRAZOR_DEV?r.Type==e:r.Type==t}function le(r){return y(r,"SetStringAttribute",1)}function he(r){return y(r,"SetNumberAttribute",2)}function ue(r){return y(r,"SetBooleanAttribute",3)}function ge(r){return y(r,"RemoveAttribute",4)}function pe(r){return y(r,"SetVoidCallback",5)}function de(r){return y(r,"RemoveCallback",6)}function fe(r){return y(r,"CreateTextNode",7)}function _e(r){return y(r,"CreateElement",8)}function me(r){return y(r,"AppendChild",9)}function be(r){return y(r,"SetTextNodeValue",10)}function we(r){return y(r,"InsertBefore",11)}var Se=new B().withUrl("/exprazorhub").withAutomaticReconnect().build(),w={};Se.on("handleCommands",r=>{r.forEach(e=>{if(le(e))w[e.Id].setAttribute(e.Key,e.Value);else if(he(e))w[e.Id].setAttribute(e.Key,e.Value.toString());else if(ue(e))e.Value?w[e.Id].setAttribute(e.Key,""):w[e.Id];else if(ge(e))w[e.Id].removeAttribute(e.Key);else if(pe(e))switch(e.Key){default:w[e.Id][e.Key]=Se.send("InvokeVoid",e.Id,e.Key);break}else de(e)?w[e.Id][e.Key]=null:fe(e)?w[e.Id]=document.createTextNode(e.Text):_e(e)?w[e.Id]=document.createElement(e.Tag):me(e)?w[e.ParentId].appendChild(w[e.ParentId]):be(e)?w[e.Id].textContent=e.Text:we(e)&&w[e.ParentId].insertBefore(w[e.NewId],w[e.BeforeId])})});})();
